(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{F9Vu:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return b}));var i=a("Fcif"),l=a("+I+c"),n=(a("mXGw"),a("/FXl")),o=a("TjRS"),c=(a("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/Api/Installation.mdx"}});var r={_frontmatter:c},p=o.a;function b(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(n.b)(p,Object(i.a)({},r,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"open-hospital-api"},"Open Hospital API"),Object(n.b)("p",null,"This is the API project of ",Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"https://www.open-hospital.org/"}),"Open Hospital"),": it exposes a REST API of the business logic implemented in the ",Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/informatici/openhospital/openhospital-core"}),"openhospital-core project"),".  "),Object(n.b)("h2",{id:"how-to-build-wip"},"How to build ","[WIP]"),Object(n.b)("p",null,"For the moment, to build this project you should "),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"fetch and build the ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://github.com/informatici/openhospital/openhospital-core"}),"core")," project")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"git clone https://github.com/informatici/openhospital-core.git\ncd openhospital-core\nmvn clean install -DskipTests=true\n")),Object(n.b)("ol",{start:2},Object(n.b)("li",{parentName:"ol"},"clone and build this project")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"git clone https://github.com/informatici/openhospital-api\ncd openhospital-api\nmvn clean install -DskipTests=true\n")),Object(n.b)("ol",{start:3},Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"call services"),Object(n.b)("p",{parentName:"li"},"URL base: localhost:8080/oh-api/patients\nURL swagger: http://localhost:8080/oh-api/swagger-ui.html")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"set rsc/database.properties"))),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"DB can be created with `docker-compose up` from `openhospital-core` or using a dedicated MySQL server\n")),Object(n.b)("ol",{start:5},Object(n.b)("li",{parentName:"ol"},"start openhospital-api")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"java -jar openhospital-api-<version>.jar\n")),Object(n.b)("p",null,"Service available on localhost:8080"),Object(n.b)("h2",{id:"code-style"},"Code style"),Object(n.b)("p",null,"This project uses a consistent code style and provides definitions for use in both IntelliJ and Eclipse IDEs."),Object(n.b)("details",null,Object(n.b)("summary",null,"IntelliJ IDEA instructions"),"For IntelliJ IDEA the process for importing the code style is:"),Object(n.b)("details",null,Object(n.b)("summary",null,"Eclipse instructions"),Object(n.b)("p",null,"For Eclipse the process requires loading the formatting style and the import order separately."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Select ",Object(n.b)("em",{parentName:"li"},"Preferences")," in the ",Object(n.b)("em",{parentName:"li"},"Window")," menu"),Object(n.b)("li",{parentName:"ul"},"Select ",Object(n.b)("em",{parentName:"li"},"Java")),Object(n.b)("li",{parentName:"ul"},"Select ",Object(n.b)("em",{parentName:"li"},"Code Style")," and expand the menu"),Object(n.b)("li",{parentName:"ul"},"Select ",Object(n.b)("em",{parentName:"li"},"Formatter")),Object(n.b)("li",{parentName:"ul"},"Select the ",Object(n.b)("em",{parentName:"li"},"Import...")," button"),Object(n.b)("li",{parentName:"ul"},"Navigate to the location of the file which relative to the project root is:  ",Object(n.b)("inlineCode",{parentName:"li"},".ide-settings/eclipse/OpenHospital-Java-CodeStyle-Formatter.xml")),Object(n.b)("li",{parentName:"ul"},"Select ",Object(n.b)("em",{parentName:"li"},"Open")),Object(n.b)("li",{parentName:"ul"},"At this point the code style is stored and is applicable to all projects opened in the IDE.  To restrict the settings just to this project select ",Object(n.b)("em",{parentName:"li"},"Configure Project Specific Settings...")," in the upper right.  In the next dialog select the ",Object(n.b)("em",{parentName:"li"},"openhospital")," repository and select ",Object(n.b)("em",{parentName:"li"},"OK"),".  In the next dialog select the ",Object(n.b)("em",{parentName:"li"},"Enable project specific settings")," checkbox.  Finally select ",Object(n.b)("em",{parentName:"li"},"Apply and Close"),"."),Object(n.b)("li",{parentName:"ul"},"Back in the ",Object(n.b)("em",{parentName:"li"},"Code Style")," menu area, select ",Object(n.b)("em",{parentName:"li"},"Organize Imports")),Object(n.b)("li",{parentName:"ul"},"Select ",Object(n.b)("em",{parentName:"li"},"Import...")),Object(n.b)("li",{parentName:"ul"},"Navigate to the location of the file which relative to the project root is:  ",Object(n.b)("inlineCode",{parentName:"li"},".ide-settings/eclipse/OpenHospital.importorder")),Object(n.b)("li",{parentName:"ul"},"Select ",Object(n.b)("em",{parentName:"li"},"Open")),Object(n.b)("li",{parentName:"ul"},"As with the formatting styles the import order is applicable to all projects.  In order to change it just for this project repeat the same steps as above for ",Object(n.b)("em",{parentName:"li"},"Configure Project Specific Settings...")))))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/Api/Installation.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-api-installation-mdx-8796e69332c6ddead513.js.map